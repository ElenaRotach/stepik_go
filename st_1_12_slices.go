package main
//go run st_1_12_slices.go
import "fmt"

func main() {
	var a []int
	var b []int = []int{1, 2, 3}
	c := []int{1, 2, 3}
	d := []int{1: 12}

	fmt.Println(a) // []
	fmt.Println(b) // [1 2 3]
	fmt.Println(c) // [1 2 3]
	fmt.Println(d) // [0 12]

	// make([]T, length, capacity)
	e := make([]int, 10, 10) // [0 0 0 0 0 0 0 0 0 0]
	fmt.Println(e)

	// создание среза из исходного
	initialUsers := [8]string{"Bob", "Alice", "Kate", "Sam", "Tom", "Paul", "Mike", "Robert"} // базовый массив

	users1 := initialUsers[2:6] // с 3-го по 6-й
	users2 := initialUsers[:4] // с 1-го по 4-й
	users3 := initialUsers[3:] // с 4-го до конца

	fmt.Println(users1) // [Kate Sam Tom Paul]
	fmt.Println(users2) // [Bob Alice Kate Sam]
	fmt.Println(users3) // [Sam Tom Paul Mike Robert]

	// добавление элементов в срез
	b = append(b, 4, 5)
	fmt.Println(b)

	// удаление элементов из среза
	f := []int{1, 2, 3, 4, 5, 6, 7}
	f = append(f[0:2], f[3:]...)
	fmt.Println(f) // [1 2 4 5 6 7]

	// копирование элементов среза
	g := []int{1, 2, 3}
	h := make([]int, 3, 3)
	n := copy(h, g)

	fmt.Printf("g = %v\n", g)                  // g = [1 2 3]
	fmt.Printf("h = %v\n", h)                  // h = [1 2 3]
	fmt.Printf("Скопировано %d элемента\n", n) // Скопировано 3 элемента

	// Напишите программу, принимающая на вход число N (N \geq 4)N(N≥4), а затем NN целых чисел-элементов среза.
	// На вывод нужно подать 4-ый (3 по индексу) элемент данного среза.
	var m, k int
	var l []int
	fmt.Scan(&m)
	for i := 1; i <= m; i++ {
		fmt.Scan(&k)
		l = append(l, k)
	}

	fmt.Printf("%d", l[3])

	// На ввод подаются пять чисел, которые записываются в массив.
	//Вам нужно написать фрагмент кода, с помощью которого можно найти и вывести максимальное число в этом массиве.
	array := [5]int{}
	var o int
	max_value := 0
	for i:=0; i < 5; i++{
		fmt.Scan(&o)
		array[i] = o
		if o > max_value {
			max_value = o
		}
	}
	fmt.Printf("%d", max_value)

	// Дан массив, состоящий из целых чисел. Нумерация элементов начинается с 0.
	// Напишите программу, которая выведет элементы массива, индексы которых четны (0, 2, 4...).
	//
	// Входные данные
	// Сначала задано число N — количество элементов в массиве (1 \leq N \leq 1001≤N≤100). Далее через пробел записаны NN чисел — элементы массива. Массив состоит из целых чисел.
	//
	// Выходные данные
	// Необходимо вывести все элементы массива с чётными номерами.
	var p, q int
	fmt.Scan(&p)
	for i := 1; i <= p; i++ {
		fmt.Scan(&q)
		if i % 2 == 1 {
			fmt.Printf("%d", q)
			fmt.Printf(" ")
		}
	}

	// Дана последовательность, состоящая из целых чисел. Напишите программу, которая подсчитывает количество положительных чисел среди элементов последовательности.
	//
	// Входные данные
	// Сначала задано число NN — количество элементов в последовательности (1\leq N\leq1001≤N≤100). Далее через пробел записаны NN чисел — элементы последовательности.
	// Последовательность состоит из целых чисел.
	//
	// Выходные данные
	// Необходимо вывести единственное число - количество положительных элементов в последовательности.
	var r, s, count_value int
	fmt.Scan(&r)
	count_value = 0
	for i := 1; i <= r; i++ {
		fmt.Scan(&s)
		if s > 0 {
			count_value++
		}
	}
	fmt.Printf("%d", count_value)
}
