package main
//go run st_1_10.go
import "fmt"

func main() {
	// Напишите программу, которая выводит квадраты натуральных чисел от 1 до 10.
	// Квадрат каждого числа должен выводится в новой строке.
	var a = 1
	for ; a <= 10; a++ {
		fmt.Println(a * a)
	}

	// Требуется написать программу, при выполнении которой с клавиатуры считываются два натуральных числа A и B (каждое не более 100, A < B).
	// Вывести сумму всех чисел от A до B  включительно.
	var (
		n, b, sum int
	)

	fmt.Scan(&n, &b)
	sum = 0
	for n <= b {
		sum += n
		n++
	}
	fmt.Println(sum)

	// Напишите программу, которая в последовательности чисел находит сумму двузначных чисел, кратных 8.
	// Программа в первой строке получает на вход число n - количество чисел в последовательности, во второй строке -- n чисел,
	// входящих в данную последовательность.
	var (
		d, e, f, sumf int
	)

	fmt.Scan(&e)
	d = 0
	sumf = 0
	for d < e {
		fmt.Scan(&f)
		if (f % 8 == 0 && f > 9 && f < 100) {
			sumf += f
		}
		d++
	}
	fmt.Println(sumf)

	// Последовательность состоит из натуральных чисел и завершается числом 0.
	// Определите количество элементов этой последовательности, которые равны ее наибольшему элементу.
	// Вводится непустая последовательность натуральных чисел, оканчивающаяся числом 0
	// (само число 0 в последовательность не входит, а служит как признак ее окончания).
	// Выведите ответ на задачу.
	var (
		g, max_value, count int
	)

	fmt.Scan(&g)
	max_value = g
	count = 1
	for g != 0 {
		fmt.Scan(&g)
		if (g > max_value) {
			max_value = g
			count = 1
		} else if (g == max_value) {
			count++
		}
	}
	fmt.Println(count)

	// Найдите первое число от 1 до n включительно, кратное c, но НЕ кратное d.
	// Вводится 3 натуральных числа n, c, d, каждое из которых не превышает 10000.
	// Вывести первое число от 1 до n включительно, кратное c, но НЕ кратное d. Если такого числа нет - выводить ничего не нужно.
	var (
		h, c, j int
	)
	fmt.Scan(&h)
	fmt.Scan(&c)
	fmt.Scan(&j)
	for i := 0; i <= h; i++{
		if i % c == 0 && i % j != 0 {
			fmt.Println(i)
			break
		}
	}

	// Напишите программу, которая считывает целые числа с консоли по одному числу в строке.
	// Для каждого введённого числа проверить:
	// если число меньше 10, то пропускаем это число;
	// если число больше 100, то прекращаем считывать числа;
	// в остальных случаях вывести это число обратно на консоль в отдельной строке.
	var (
		k int
	)

	for {
		fmt.Scan(&k)

		if k < 10 {
			continue
		}

		if k > 100 {
			break
		}

		fmt.Println(k)
	}

	// Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов, после чего дробная часть копеек отбрасывается.
	// Каждый год сумма вклада становится больше. Определите, через сколько лет вклад составит не менее y рублей.
	// Программа получает на вход три натуральных числа: x, p, y.
	// Программа должна вывести одно целое число.
	var (
		x, p, y int
	)
	fmt.Scan(&x)
	fmt.Scan(&p)
	fmt.Scan(&y)
	sumX := x
	l := 1

	for {
		sumX = sumX * (100 + p) / 100
		if sumX >= y {
			fmt.Println(l)
			break
		}
		l++
	}

	// Даны два числа. Определить цифры, входящие в запись как первого, так и второго числа.
	// Программа получает на вход два числа. Гарантируется, что цифры в числах не повторяются. Числа в пределах от 0 до 10000.
	// Программа должна вывести цифры, которые имеются в обоих числах, через пробел. Цифры выводятся в порядке их нахождения в первом числе.
	var (
		m, o string
	)
	fmt.Scan(&m)
	fmt.Scan(&o)

	for _, valM := range m {
		for _, valO := range o {
			if valM == valO {
				fmt.Printf("%c", valO)
				fmt.Printf(" ")
			}
		}
	}

	var r, q,an, bn int
	fmt.Scan(&a,&b)

	for i:=1000;i>=1 && r>0;i=i/10 {
		if r/i ==0 {continue}
		an = r/i%10
		for i:=1;i<10000 && q>0;i=i*10 {
			bn = q/i%10
			if bn == an {fmt.Print(an," "); break}
		}
	}
}
